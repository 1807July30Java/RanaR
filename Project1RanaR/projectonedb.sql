-- EMPLOYEE TABLE
CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID INT PRIMARY KEY NOT NULL,
    FIRSTNAME VARCHAR2(15) NOT NULL,
    LASTNAME VARCHAR2(15) NOT NULL,
    USERNAME VARCHAR2(15),
    PASSWORD VARCHAR2(15),
    EMPLOYEE_MANAGER INT,
    MANAGER_YORN NUMBER (1,0) DEFAULT 0 CHECK (MANAGER_YORN = 0 OR MANAGER_YORN = 1),
    CONSTRAINT UNIQUE_USERNAME UNIQUE (USERNAME),
    EMPLOYEE_EMAIL VARCHAR2(320) CHECK (
    REGEXP_LIKE(EMAIL, '[[:alnum:]]+@[[:alnum:]]+.[[:alnum:]]'))
);
/

INSERT INTO EMPLOYEE (USERNAME, PASSWORD, MANAGER_YORN) VALUES ('admin', 'pass', 1);

ALTER TABLE EMPLOYEE
ADD FOREIGN KEY (EMPLOYEE_MANAGER) REFERENCES EMPLOYEE(EMPLOYEE_ID);
/

-- BANK ACOUNT CREATION
CREATE TABLE REIMBURSEMENT_REQUESTS(
    REIMBURSEMENT_REQUEST_ID INT PRIMARY KEY,
    EMPLOYEE_ID INT,
    REIMBURSEMENT_STATUS INT
);
/

--ADD FOREIGN KEY REFERENCE
ALTER TABLE REIMBURSEMENT_REQUESTS
ADD FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID);
/
    
--CREATE SEQUENCES 

CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_REIMBURSMENT_REQUEST_PK
START WITH 1
INCREMENT BY 1;
/

--TRIGGERS
CREATE TRIGGER TR_EMPLOYEE_ACCOUNT
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;
/

CREATE TRIGGER TR_REIMBURSMENT_REQUEST_ACCOUNT
BEFORE INSERT ON REIMBURSMENT_REQUESTS
FOR EACH ROW
BEGIN
    SELECT SQ_REIMBURSMENT_REQUEST_PK.NEXTVAL INTO :NEW.REIMBURSMENT_REQUEST_ID FROM DUAL;
END;
/
